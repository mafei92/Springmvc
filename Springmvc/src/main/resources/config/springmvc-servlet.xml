<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.1.xsd
						http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<!-- <mvc:annotation-driven /> -->
	<!-- 默认的注解映射的支持 ,它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter -->
	<!-- 
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
	 -->
	<context:annotation-config />
	
	<!-- 配置注解搜索的范围 -->
	<context:component-scan base-package="com.dfc.springmvc">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- json格式配置 -->
	<mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion">
                            <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                        </property>
                        <!-- 
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg value="yyyy-MM-dd HH:mm:ss"/>
                            </bean>
                        </property> -->
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!-- 拦截器 -->
    <mvc:interceptors>
        <!--记录请求时间，并打印日志，此拦截器放在第一个比较准-->
        <mvc:interceptor>
            <!-- 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* -->
            <mvc:mapping path="/**"/>
            <!--排除的URL-->
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/themes/**"/>
            <mvc:exclude-mapping path="/plugins/**"/>
            
            <mvc:exclude-mapping path="/common/login.do"/><!-- 登录不拦截 -->

            <bean class="com.dfc.springmvc.interceptor.CommonInterceptor"/>
        </mvc:interceptor>
        <!--定义本地化变更拦截器-->
        <mvc:interceptor>
            <!-- 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* -->
            <mvc:mapping path="/**"/>
            <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
	
	<!-- 试图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 静态资源访问(缓存一周) -->
	<mvc:resources location="/css/" mapping="/css/**" cache-period="604800" />
	<mvc:resources location="/js/" mapping="/js/**" cache-period="604800" />
	<mvc:resources location="/images/" mapping="/images/**" cache-period="604800" />
	<mvc:resources location="/themes/" mapping="/themes/**" cache-period="604800" />
	<mvc:resources location="/plugins/" mapping="/plugins/**" cache-period="604800" />

	<!-- 文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<!-- 1024K*1024*10即10M -->
		<property name="maxUploadSize" value="10485760" /><!-- 文件最大上限 -->
		<property name="maxInMemorySize" value="1048576" /><!-- 文件缓存大小 -->
		<!-- resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常 -->
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- 定义国际化消息 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<!-- 其中basename用来指定properties文件的通用名,如实例中的messages_en.properties,messages_ja.properties通用名都是messages -->
		<property name="basename" value="messages/ApplicationResources" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- 获取本地 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
	
	<!-- 开启这个配置，spring才能识别@Scheduled注解 -->
	<task:annotation-driven scheduler="qbScheduler" mode="proxy" />
	<task:scheduler id="qbScheduler" pool-size="10" />

</beans>  